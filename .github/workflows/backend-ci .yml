name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: farhanmullick/finch-backend
  TAG: latest
  POSTGRES_HOST: db
  POSTGRES_USER: roy77
  POSTGRES_PASSWORD: asdf1234@77
  POSTGRES_DB: fleetdb

jobs:
  test:
    name: Django Checks & Unit Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U roy77"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        volumes:
          - postgres_data:/var/lib/postgresql/data

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t ${IMAGE_NAME}:${TAG} .

    - name: Run tests inside Docker container
      run: |
        docker run --rm \
          --network host \
          -e POSTGRES_HOST=localhost \
          -e POSTGRES_USER=${{ env.POSTGRES_USER }} \
          -e POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }} \
          -e POSTGRES_DB=${{ env.POSTGRES_DB }} \
          ${IMAGE_NAME}:${TAG} bash -c "python3 manage.py migrate && python3 manage.py test"

  build-and-push:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.TAG }}
          platforms: linux/amd64,linux/arm64
